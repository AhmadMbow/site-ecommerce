#!/bin/bash

# Script de test pour l'envoi d'email avec re√ßu PDF

echo "=========================================="
echo "üß™ TEST ENVOI EMAIL + RE√áU PDF"
echo "=========================================="
echo ""

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

cd /home/ahmadmbow/e-commerce/ecommerce

echo "üìã V√©rification des d√©pendances..."

# Test 1: ReportLab install√©
if python3 -c "import reportlab" 2>/dev/null; then
    echo -e "${GREEN}‚úÖ ReportLab install√©${NC}"
else
    echo -e "${RED}‚ùå ReportLab manquant${NC}"
    exit 1
fi

# Test 2: Template email existe
if [ -f "templates/emails/commande_livree.html" ]; then
    echo -e "${GREEN}‚úÖ Template email trouv√©${NC}"
else
    echo -e "${RED}‚ùå Template email manquant${NC}"
    exit 1
fi

# Test 3: Fonctions dans utils.py
if grep -q "def generate_receipt_pdf" boutique/utils.py && \
   grep -q "def send_delivery_email_with_receipt" boutique/utils.py; then
    echo -e "${GREEN}‚úÖ Fonctions trouv√©es dans utils.py${NC}"
else
    echo -e "${RED}‚ùå Fonctions manquantes${NC}"
    exit 1
fi

# Test 4: Vue modifi√©e
if grep -q "send_delivery_email_with_receipt" boutique/views.py; then
    echo -e "${GREEN}‚úÖ Vue livreur_order_update_status modifi√©e${NC}"
else
    echo -e "${RED}‚ùå Vue non modifi√©e${NC}"
    exit 1
fi

echo ""
echo "=========================================="
echo "üìÑ Test de g√©n√©ration PDF"
echo "=========================================="

python3 manage.py shell << 'EOF'
from boutique.models import Commande
from boutique.utils import generate_receipt_pdf

commande = Commande.objects.filter(statut='LIVREE').order_by('-id').first()

if commande:
    print(f"\n‚úÖ Commande trouv√©e: #{commande.id}")
    print(f"   Client: {commande.user.username}")
    print(f"   Email: {commande.user.email}")
    print(f"   Total: {commande.total} F CFA")
    print(f"   Articles: {commande.items.count()}")
    
    try:
        pdf_content = generate_receipt_pdf(commande)
        print(f"\n‚úÖ PDF g√©n√©r√©: {len(pdf_content):,} bytes ({len(pdf_content)/1024:.1f} KB)")
        
        with open('test_recu.pdf', 'wb') as f:
            f.write(pdf_content)
        print(f"‚úÖ PDF sauvegard√©: test_recu.pdf")
    except Exception as e:
        print(f"\n‚ùå Erreur: {e}")
        import traceback
        traceback.print_exc()
        exit(1)
else:
    print("\n‚ùå Aucune commande LIVREE trouv√©e")
    print("   Cr√©ez une commande de test d'abord")
    exit(1)
EOF

if [ $? -eq 0 ]; then
    echo -e "\n${GREEN}‚úÖ PDF g√©n√©r√© avec succ√®s !${NC}"
    echo ""
    echo "üìÇ Fichier cr√©√©: test_recu.pdf"
    echo "   Vous pouvez l'ouvrir avec: xdg-open test_recu.pdf"
else
    echo -e "\n${RED}‚ùå √âchec de la g√©n√©ration PDF${NC}"
    exit 1
fi

echo ""
echo "=========================================="
echo "üìß Test d'envoi Email (optionnel)"
echo "=========================================="
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  Pour tester l'envoi r√©el d'email:${NC}"
echo ""
echo "python3 manage.py shell"
echo ">>> from boutique.models import Commande"
echo ">>> from boutique.utils import send_delivery_email_with_receipt"
echo ">>> commande = Commande.objects.filter(statut='LIVREE').first()"
echo ">>> success = send_delivery_email_with_receipt(commande)"
echo ">>> print(f'Email envoy√©: {success}')"
echo ""
echo -e "${GREEN}‚ú® Ou marquez une commande comme livr√©e via l'interface livreur${NC}"
echo ""

echo "=========================================="
echo "‚úÖ TOUS LES TESTS R√âUSSIS !"
echo "=========================================="
echo ""
echo "üìù R√©sum√©:"
echo "  ‚úÖ ReportLab install√©"
echo "  ‚úÖ Template email cr√©√©"
echo "  ‚úÖ Fonctions dans utils.py"
echo "  ‚úÖ Vue modifi√©e"
echo "  ‚úÖ PDF g√©n√©r√© et test√©"
echo ""
echo "üöÄ Pr√™t pour la production !"
echo ""
